/*********************************************************************/
/*                        倒数计算工具头文件                          */
/*                                                                   */
/* 文件名: reciprocal.h                                              */
/* 描述: 定义带倒数缓存的浮点数数据结构，用于优化频繁使用倒数的场景      */
/*********************************************************************/

#ifndef UTILS_RECIPROCAL_H
#define UTILS_RECIPROCAL_H

/*********************************************************************/
/*                        数据结构定义                                */
/*********************************************************************/
/**
 * @brief  带倒数的浮点数结构体
 * @note   用于存储一个浮点数及其倒数值，可避免重复计算倒数
 *         在电机控制中，某些参数的倒数会被频繁使用
 *         预先计算并存储可以提高运行效率
 */
typedef struct {
    float val; /* 原始浮点数值 */
    float inv; /* 对应的倒数值(1/val) */
} FloatWithInv_t;

typedef struct {
    FloatWithInv_t current;
    FloatWithInv_t speed;
    float          prescaler;  // 转速环分频数
} SystemTimeConfig_t;

#endif /* UTILS_RECIPROCAL_H */